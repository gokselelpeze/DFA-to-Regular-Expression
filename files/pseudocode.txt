Read file and save all variables in a graph-like structure
Create a new initial state qinit and connect it to the old initial state.
Create a new final state qfin and connect all existing final states to it.

Eliminate states until there are 2 states left:
    Remove any dead states if exists.
    Select the state with the minimum number of transitions
        foreach incoming transitions as in
                foreach outgoing transitions as out
                    if in -> source and out -> destination are same (self loop)
                        [in -> selfLoop] += [in -> value x [selfLoop* if exists] x out -> value]
                    else
                        [in.outTransition] += [in -> value x [selfLoop* if exists] x out -> value]
                        [out.inTransition] += [in -> value x [selfLoop* if exists] x out -> value]
    Remove all transitions of removed state
    Print the result


